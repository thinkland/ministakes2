# github workflow deploy to netcup and contabo
# version: 2021-06-06 17:00:00

name: Build and Deploy to Netcup

on: [push]

env:
  GH_USER: ${{ github.actor }}
  REG_NAME: ghcr.io
  REG_PASS: ${{ secrets.GHCR_PAT_TOKEN }}
  IMAGE_NAME: jekyll1
  IMAGE_TAG: "build-${{ github.run_number }}"
  IMAGE_FULL: "ghcr.io/${{ github.actor }}/jekyll1:build-${{ github.run_number }}"   # env vars do not work?

jobs:

  #############################################################################
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Docker login
    - name: Log in to GitHub Docker Registry
      run: |-
        echo $REG_PASS | docker login $REG_NAME -u $GH_USER --password-stdin

    # Build the Docker image
    - name: Build in Docker
      run: |-
        docker build \
          --tag "$IMAGE_FULL" \
          --file docker/jekyll.Dockerfile \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish to Container Registry
      run: |-
        docker push "$IMAGE_FULL"


  #############################################################################
  deploy1:
    name: Deploy to Netcup
    needs: [build]
    runs-on: ubuntu-latest
    environment: production
    env:
      K8S_NAMESPACE: mini2
      K8S_FOLDER:    k8s/prod-netcup
      K8S_CLUSTER_SERVER_1: https://202.61.228.230:16443
      K8S_CLUSTER_CERT_1:   ${{ secrets.K8S_CLUSTER_CERT }}
      K8S_USER_TOKEN_1:     ${{ secrets.K8S_USER_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Set K8s Credentials:
    - name: Get K8s credentials
      run: |-
        kubectl config view
        kubectl config set-cluster     netcup-cluster
        kubectl config set    clusters.netcup-cluster.server                     $K8S_CLUSTER_SERVER_1
        kubectl config set    clusters.netcup-cluster.certificate-authority-data $K8S_CLUSTER_CERT_1
        kubectl config set-credentials netcup-admin --token=$K8S_USER_TOKEN_1
        kubectl config set-context     netcup       --user=netcup-admin --cluster=netcup-cluster
        kubectl config use-context     netcup
        kubectl config view

    # Set up kustomize
    - name: Install Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy images secrets
    - name: Deploy image secrets
      run: |-
        kubectl apply -f $K8S_FOLDER/namespace.yml
        kubectl create secret docker-registry regcred \
          --docker-server=$REG_NAME \
          --docker-username=$GH_USER \
          --docker-password=$REG_PASS \
          --namespace $K8S_NAMESPACE \
          --dry-run=client --save-config -o yaml \
          | kubectl apply -f -

    # Deploy the Docker image to the Netcup cluster
    # before with: kubectl rollout status deployment/$DEPLOYMENT_NAME
    - name: Deploy to K8s cluster
      run: |-
        cd $K8S_FOLDER
        ../../kustomize edit set image jekyll1=$IMAGE_FULL
        ../../kustomize build | kubectl apply -f -
        ../../kustomize build
        kubectl get all -o wide -n $K8S_NAMESPACE

  #############################################################################
  deploy2:
    name: Deploy to Contabo
    if: ${{ true }}
    needs: [build]
    runs-on: ubuntu-latest
    environment: production
    env:
      K8S_NAMESPACE:      mini2-prod
      K8S_FOLDER:         k8s/prod-contabo
      K8S_CLUSTER_SERVER: https://194.163.146.71:16443
      K8S_CLUSTER_CERT:   ${{ secrets.K8S_CONTABO_CLUSTER_CERT }}
      K8S_USER_TOKEN:     ${{ secrets.K8S_CONTABO_USER_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Set K8s Credentials:
    - name: Get K8s credentials
      run: |-
        kubectl config view
        kubectl config set-cluster     contabo-cluster
        kubectl config set    clusters.contabo-cluster.server                     $K8S_CLUSTER_SERVER
        kubectl config set    clusters.contabo-cluster.certificate-authority-data $K8S_CLUSTER_CERT
        kubectl config set-credentials contabo-admin --token=$K8S_USER_TOKEN
        kubectl config set-context     contabo       --user=contabo-admin --cluster=contabo-cluster
        kubectl config use-context     contabo
        kubectl config view

    # Set up kustomize
    - name: Install Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy images secrets
    - name: Deploy image secrets
      run: |-
        kubectl apply -f $K8S_FOLDER/namespace.yml
        kubectl create secret docker-registry regcred \
          --docker-server=$REG_NAME \
          --docker-username=$GH_USER \
          --docker-password=$REG_PASS \
          --namespace $K8S_NAMESPACE \
          --dry-run=client --save-config -o yaml \
          | kubectl apply -f -

    # Deploy the Docker image to the contabo cluster
    - name: Deploy to K8s cluster
      run: |-
        cd $K8S_FOLDER
        ../../kustomize edit set image jekyll1=$IMAGE_FULL
        ../../kustomize build | kubectl apply -f -
        ../../kustomize build
        kubectl get all -n $K8S_NAMESPACE

