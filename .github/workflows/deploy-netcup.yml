# github workflow deploy to netcup
# version: 2021-06-05 13:00:00

name: Build and Deploy to Netcup

on: [push]

env:
  REGISTRY: ghcr.io
  GH_USER: ${{ github.actor }}
  REG_PASS: ${{ secrets.GHCR_PAT_TOKEN }}
  IMAGE_NAME: jekyll1
  IMAGE_TAG: latest   # TODO
  IMAGE_FULL: ${{ env.REGISTRY }}/${{ env.GH_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  K8S_CLUSTER_SERVER: https://202.61.228.230:16443
  K8S_CLUSTER_CERT:   ${{ secrets.K8S_CLUSTER_CERT }}
  K8S_USER_TOKEN:     ${{ secrets.K8S_USER_TOKEN }}


jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Docker login
    - name: Log in to GitHub Docker Registry
      run: |-
        echo $REG_PASS | docker login $REGISTRY -u $GH_USER --password-stdin

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$IMAGE_FULL" \
          --file docker/jekyll.Dockerfile \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "$IMAGE_FULL"

    # Set K8s Credentials:
    - name: Get K8s credentials
      run: |-
        kubectl config view
        kubectl config set-cluster     netcup-cluster
        kubectl config set    clusters.netcup-cluster.server                     $K8S_CLUSTER_SERVER
        kubectl config set    clusters.netcup-cluster.certificate-authority-data $K8S_CLUSTER_CERT
        kubectl config set-credentials netcup-admin --token=$K8S_USER_TOKEN
        kubectl config set-context     netcup       --user=netcup-admin --cluster=netcup-cluster
        kubectl config use-context     netcup
        kubectl config view

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the Netcup cluster
    # before with: kubectl rollout status deployment/$DEPLOYMENT_NAME
    - name: Deploy
      run: |-
        cd k8s/prod
        cp ../../kustomize .
        ls -la
        ./kustomize edit set image jekyll1=$REGISTRY/$GH_USER/$IMAGE_NAME:$IMAGE_TAG
        ./kustomize build | kubectl apply -f -
        kubectl get all -o wide -n prod
        